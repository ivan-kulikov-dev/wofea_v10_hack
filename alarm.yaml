substitutions: !include substitutions.yaml

esphome:
  name: alarm
  platform: ESP8266
  board: esp12e
  esp8266_restore_from_flash: True

wifi:
  ssid: $wifi_ssid
  password: $wifi_password

# Enable logging
logger:
  level: WARN

# Enable Home Assistant API
api:

# Enable OTA
ota:

status_led:
  pin: 
    number: GPIO0
    inverted: True

remote_transmitter:
  pin: GPIO4
  carrier_duty_percent: 100%
  
remote_receiver:
  pin: GPIO5
  #dump: raw
  
script:
  - id: alarm_detection
    then:
      - if:
          condition:
            switch.is_on: alarm_state
          then:
            - if:
                condition:
                  switch.is_off: wired_siren
                then:
                  - switch.turn_on: wired_siren
                  - delay: 1s
                  - switch.turn_on: start_siren_ext 
          else:
            - output.turn_on: led2_blue
            - delay: 2s
            - output.turn_off: led2_blue

output:
  - platform: gpio
    pin: 
      number: GPIO2
      inverted: True
    id: led2_blue
    
  - platform: gpio
    pin: 
      number: GPIO15
      inverted: True
    id: led2_red
    
  - platform: gpio
    pin: GPIO3
    id: wired_siren_gpio

sensor:
  - platform: uptime
    name: Alarm uptime

binary_sensor:
  - platform: gpio
    name: "Reset button"
    pin: 
      number: GPIO16
      inverted: True
    filters:
      - delayed_on: 10ms

  - platform: remote_receiver
    name: $PIR1_LABEL
    device_class: motion
    rc_switch_raw:
      code: $PIR1_CODE
      protocol:
        pulse_length: 385
    filters:
       - delayed_off: 2s
    on_press:
      then:
        - script.execute: alarm_detection
       
  - platform: remote_receiver
    name: $PIR2_LABEL
    device_class: motion
    rc_switch_raw:
      code: $PIR2_CODE
      protocol:
        pulse_length: 385
    filters:
       - delayed_off: 2s
    on_press:
      then:
        - script.execute: alarm_detection
       
  - platform: remote_receiver
    name: $PIR3_LABEL
    device_class: motion
    rc_switch_raw:
      code: $PIR3_CODE
      protocol:
        pulse_length: 385
    filters:
       - delayed_off: 2s
    on_press:
      then:
        - script.execute: alarm_detection
       
  - platform: remote_receiver
    name: $CONTACT1_LABEL
    device_class: motion
    rc_switch_raw:
      code: $CONTACT1_CODE
      protocol:
        pulse_length: 433
    filters:
       - delayed_off: 2s
    on_press:
      then:
        - script.execute: alarm_detection
       
  - platform: remote_receiver
    name: $CONTACT2_LABEL
    device_class: motion
    rc_switch_raw:
      code: $CONTACT2_CODE
      protocol:
        pulse_length: 433
    filters:
       - delayed_off: 2s
    on_press:
      then:
        - script.execute: alarm_detection
       
  - platform: remote_receiver
    name: $CONTACT3_LABEL
    device_class: motion
    rc_switch_raw:
      code: $CONTACT3_CODE
      protocol:
        pulse_length: 433
    filters:
       - delayed_off: 2s
    on_press:
      then:
        - script.execute: alarm_detection
       
  - platform: remote_receiver
    name: $CONTACT4_LABEL
    device_class: motion
    rc_switch_raw:
      code: $CONTACT4_CODE
      protocol:
        pulse_length: 435
    filters:
       - delayed_off: 2s
    on_press:
      then:
        - script.execute: alarm_detection
        
  - platform: remote_receiver
    name: $CONTACT5_LABEL
    device_class: motion
    rc_switch_raw:
      code: $CONTACT5_CODE
      protocol:
        pulse_length: 433
    filters:
       - delayed_off: 2s
    on_press:
      then:
        - script.execute: alarm_detection
    
        
  - platform: remote_receiver
    name: "Remote disarm 1"
    rc_switch_raw:
      code: $REMOTE1_DISARM
      protocol: 
        pulse_length: 325
    filters:
      - delayed_off: 2s
    on_press:
      then:
        - if:
            condition:
              switch.is_on: alarm_state
            then:
              - switch.turn_off: alarm_state
        
  - platform: remote_receiver
    name: "Remote disarm 2"
    rc_switch_raw:
      code: $REMOTE2_DISARM
      protocol: 
        pulse_length: 325
    filters:
      - delayed_off: 2s
    on_press:
      then:
        - if:
            condition:
              switch.is_on: alarm_state
            then:
              - switch.turn_off: alarm_state
        
  - platform: remote_receiver
    name: "Remote arm 1"
    rc_switch_raw:
      code: $REMOTE1_ARM
      protocol: 
        pulse_length: 325
    filters:
      - delayed_off: 2s
    on_press:
      then:
        - if:
            condition:
              switch.is_off: alarm_state
            then:
              - switch.turn_on: alarm_state
        
  - platform: remote_receiver
    name: "Remote arm 2"
    rc_switch_raw:
      code: $REMOTE2_ARM
      protocol: 
        pulse_length: 325
    filters:
      - delayed_off: 2s
    on_press:
      then:
        - if:
            condition:
              switch.is_off: alarm_state
            then:
              - switch.turn_on: alarm_state
        
  - platform: remote_receiver
    name: "Remote flash 1"
    rc_switch_raw:
      code: $REMOTE1_FLASH
      protocol: 
        pulse_length: 325
    filters:
      - delayed_off: 2s
      
  - platform: remote_receiver
    name: "Remote flash 2"
    rc_switch_raw:
      code: $REMOTE2_FLASH
      protocol: 
        pulse_length: 325
    filters:
      - delayed_off: 2s
      
  - platform: remote_receiver
    name: "Remote siren 1"
    rc_switch_raw:
      code: $REMOTE1_SIREN
      protocol: 
        pulse_length: 325
    filters:
      - delayed_off: 2s
      
  - platform: remote_receiver
    name: "Remote siren 2"
    rc_switch_raw:
      code: $REMOTE2_SIREN
      protocol: 
        pulse_length: 325
    filters:
      - delayed_off: 2s
      
  - platform: remote_receiver
    name: "RF jamming"
    rc_switch_raw:
      code: $JAMMING_PING
      protocol:
        pulse_length: 433
    filters:
      - delayed_off: 90s
      - invert:

switch:
  - platform: template
    name: "Disarm ext siren"
    id: disarm_siren_ext
    icon: "mdi:volume-off"
    turn_on_action:
      remote_transmitter.transmit_rc_switch_raw:
        code: $RF_SEND_SIREN_DISARM
        protocol: 1
        repeat: 
          times: 10
          wait_time: 0s
        
  - platform: template
    name: "Arm ext siren"
    id : arm_siren_ext
    icon: "mdi:volume-low"
    turn_on_action:
      remote_transmitter.transmit_rc_switch_raw:
        code: $RF_SEND_SIREN_ARM
        protocol: 1
        repeat: 
          times: 10
          wait_time: 0s
        
  - platform: template
    name: "Start ext siren"
    id : start_siren_ext
    icon: "mdi:volume-high"
    turn_on_action:
      remote_transmitter.transmit_rc_switch_raw:
        code: $RF_SEND_SIREN_START
        protocol: 1
        repeat: 
          times: 10
          wait_time: 0s
        
  - platform: template
    name: "Alarm state"
    id : alarm_state
    icon : "mdi:home-lock"
    optimistic: True
    restore_state: True
    turn_on_action:
      - output.turn_on: led2_red
      - delay: 1s
      - switch.turn_on: arm_siren_ext
    turn_off_action:
      - output.turn_off: led2_red
      - switch.turn_off: wired_siren
      - delay: 1s
      - switch.turn_on: disarm_siren_ext
      
  - platform: template
    name: "Wired siren"
    id : wired_siren
    icon : "mdi:volume-plus"
    optimistic: True
    turn_on_action:
      - output.turn_on: wired_siren_gpio
      #Siren max duration
      - delay: 5min
      - output.turn_off: wired_siren_gpio
    turn_off_action:
      - output.turn_off: wired_siren_gpio
      
  - platform: template
    name: "Short wired siren"
    id : short_wired_siren
    optimistic: True
    turn_on_action:
      - output.turn_on: wired_siren_gpio
      - delay: 100ms
      - output.turn_off: wired_siren_gpio
      - delay: 100ms
      - output.turn_on: wired_siren_gpio
      - delay: 100ms
      - output.turn_off: wired_siren_gpio
      - delay: 100ms
      - output.turn_on: wired_siren_gpio
      - delay: 100ms
      - output.turn_off: wired_siren_gpio
    turn_off_action:
      - output.turn_off: wired_siren_gpio
    
